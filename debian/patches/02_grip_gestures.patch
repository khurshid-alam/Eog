Description: Add gesture functionality via libgrip.
Author: Canonical DX Multi-Touch Team  <multi-touch-dev@lists.launchpad.net>

Index: eog-3.5.92/configure.ac
===================================================================
--- eog-3.5.92.orig/configure.ac	2012-09-08 04:49:10.000000000 +1200
+++ eog-3.5.92/configure.ac	2012-09-20 10:20:50.594534976 +1200
@@ -284,6 +284,23 @@
 AM_CONDITIONAL([HAVE_RSVG], [test "x$have_rsvg" = "xyes"])
 
 # ****************
+# Open Input Framework
+# ****************
+GRIP_REQUIRED=0.2.1
+
+AC_ARG_WITH([libgrip], AC_HELP_STRING([--without-libgrip], [disable libgrip support]))
+have_libgrip=no
+if test x$with_libgrip != xno; then
+   PKG_CHECK_MODULES(GRIP, libgrip >= $GRIP_REQUIRED, have_libgrip=yes, have_libgrip=no)
+fi
+if test "x$have_libgrip" = "xyes"; then
+  AC_DEFINE(HAVE_LIBGRIP, 1, [libgrip support])
+  EOG_MODULES="$EOG_MODULES libgrip >= $GRIP_REQUIRED"
+fi
+
+AM_CONDITIONAL([HAVE_LIBGRIP], [test "x$have_libgrip" = "xyes"])
+
+# ****************
 # CFLAGS/LIBS init
 # ****************
 
@@ -370,4 +387,5 @@
 	JPEG support ...............:  ${have_jpeg}
 	Colour management support ..:  ${have_lcms}
 	GObject Introspection.......:  ${have_introspection}
+	Libgrip gestures............:  ${have_libgrip}
 "
Index: eog-3.5.92/src/eog-scroll-view.c
===================================================================
--- eog-3.5.92.orig/src/eog-scroll-view.c	2012-09-08 04:52:11.000000000 +1200
+++ eog-3.5.92/src/eog-scroll-view.c	2012-09-20 10:20:50.594534976 +1200
@@ -9,6 +9,9 @@
 #ifdef HAVE_RSVG
 #include <librsvg/rsvg.h>
 #endif
+#ifdef HAVE_LIBGRIP
+#include <libgrip/grip.h>
+#endif
 
 #include "eog-config-keys.h"
 #include "eog-enum-types.h"
@@ -138,11 +141,15 @@
 	/* Scroll wheel zoom */
 	gdouble zoom_multiplier;
 
-	/* dragging stuff */
+	/* drag gesture data */
 	int drag_anchor_x, drag_anchor_y;
 	int drag_ofs_x, drag_ofs_y;
 	guint dragging : 1;
 
+	/* pinch gesture data */
+	float begin_radius;
+	float begin_zoom;
+
 #if 0
 	/* status of progressive loading */
 	ProgressiveState progressive_state;
@@ -1701,6 +1708,82 @@
 	return TRUE;
 }
 
+#ifdef HAVE_LIBGRIP
+static void
+_oif_gesture_event (GtkWidget        *widget,
+                    GripTimeType      time_type,
+                    GripGestureEvent *event,
+                    gpointer          user_data)
+{
+        EogScrollView *view = EOG_SCROLL_VIEW (widget);
+        EogScrollViewPrivate *priv = view->priv;
+        GtkWindow *toplevel = (GtkWindow *)gtk_widget_get_toplevel (widget);
+
+
+        if (time_type == GRIP_TIME_START) {
+                switch (event->type) {
+                case GRIP_GESTURE_DRAG: {
+                        GripEventGestureDrag *drag = (GripEventGestureDrag *)event;
+
+                        priv->dragging = TRUE;
+                        priv->drag_anchor_x = drag->position_x;
+                        priv->drag_anchor_y = drag->position_y;
+
+                        priv->drag_ofs_x = priv->xofs;
+                        priv->drag_ofs_y = priv->yofs;
+
+                        break;
+                }
+                case GRIP_GESTURE_PINCH: {
+                        GripEventGesturePinch *pinch = (GripEventGesturePinch *)event;
+
+                        priv->begin_radius = pinch->radius;
+                        priv->begin_zoom = priv->zoom;
+
+                        break;
+                }
+
+                default:
+                        break;
+                }
+        } else if (time_type == GRIP_TIME_END) {
+                switch (event->type) {
+                case GRIP_GESTURE_DRAG:
+                        priv->dragging = FALSE;
+                        break;
+
+                default:
+                        break;
+                }
+        } else {
+                switch (event->type) {
+                case GRIP_GESTURE_DRAG: {
+                        GripEventGestureDrag *drag = (GripEventGestureDrag *)event;
+
+                        if (drag->fingers == 2) {
+                                drag_to (view, drag->position_x, drag->position_y);
+                        }
+
+                        break;
+                }
+
+                case GRIP_GESTURE_PINCH: {
+                        GripEventGesturePinch *pinch = (GripEventGesturePinch *)event;
+                        gdouble zoom_factor = pinch->radius / priv->begin_radius;
+
+                        set_zoom (view, priv->begin_zoom * zoom_factor,
+                                  TRUE, pinch->focus_x, pinch->focus_y);
+
+                        break;
+                }
+
+                default:
+                        break;
+                }
+        }
+}
+#endif
+
 static void
 display_map_event (GtkWidget *widget, GdkEvent *event, gpointer data)
 {
@@ -2471,6 +2554,29 @@
 	priv->override_bg_color = NULL;
 	priv->background_surface = NULL;
 
+#ifdef HAVE_LIBGRIP
+	{
+	  GtkWidget *widget = GTK_WIDGET (view);
+	  GripGestureManager *manager = grip_gesture_manager_get ();
+
+	  grip_gesture_manager_register_window (manager,
+						widget,
+						GRIP_GESTURE_PINCH,
+						GRIP_DEVICE_ALL,
+						2,
+						_oif_gesture_event,
+						NULL, NULL);
+
+	  grip_gesture_manager_register_window (manager,
+						widget,
+						GRIP_GESTURE_DRAG,
+						GRIP_DEVICE_TOUCHSCREEN,
+						2,
+						_oif_gesture_event,
+						NULL, NULL);
+	}
+#endif
+
 	priv->hadj = GTK_ADJUSTMENT (gtk_adjustment_new (0, 100, 0, 10, 10, 100));
 	g_signal_connect (priv->hadj, "value_changed",
 			  G_CALLBACK (adjustment_changed_cb),
Index: eog-3.5.92/src/eog-window.c
===================================================================
--- eog-3.5.92.orig/src/eog-window.c	2012-09-20 04:20:32.000000000 +1200
+++ eog-3.5.92/src/eog-window.c	2012-09-20 10:20:50.594534976 +1200
@@ -70,6 +70,9 @@
 #include <gdk/gdkkeysyms.h>
 #include <gio/gdesktopappinfo.h>
 #include <gtk/gtk.h>
+#ifdef HAVE_LIBGRIP
+#include <libgrip/grip.h>
+#endif
 
 #include <libpeas/peas-extension-set.h>
 #include <libpeas/peas-activatable.h>
@@ -103,6 +106,10 @@
 
 #define EOG_WALLPAPER_FILENAME "eog-wallpaper"
 
+#ifdef HAVE_LIBGRIP
+#define EOG_GESTURE_ROTATE_THRESHOLD 0.785 /* 45 degrees in rad */
+#endif
+
 #define is_rtl (gtk_widget_get_default_direction () == GTK_TEXT_DIR_RTL)
 
 typedef enum {
@@ -4374,6 +4381,51 @@
 	g_free (tooltip);
 }
 
+#ifdef HAVE_LIBGRIP
+static float zero_angle;
+static void
+_oif_window_gesture_event (GtkWidget        *widget,
+                              GripTimeType      time_type,
+                              GripGestureEvent *event,
+                              gpointer          user_data)
+{
+	if (time_type == GRIP_TIME_START) {
+		switch (event->type) {
+		case GRIP_GESTURE_ROTATE: {
+			GripEventGestureRotate *rotate = (GripEventGestureRotate *)event;
+			zero_angle = rotate->angle;
+			break;
+		}
+
+		default:
+			break;
+		}
+	}
+	if (time_type == GRIP_TIME_UPDATE) {
+		switch (event->type) {
+		case GRIP_GESTURE_ROTATE: {
+			GripEventGestureRotate *rotate = (GripEventGestureRotate *)event;
+
+			if (rotate->angle - zero_angle >= EOG_GESTURE_ROTATE_THRESHOLD) {
+				apply_transformation (EOG_WINDOW (user_data),
+						eog_transform_rotate_new (90));
+				zero_angle = rotate->angle;
+			} else if (zero_angle - rotate->angle >= EOG_GESTURE_ROTATE_THRESHOLD) {
+				apply_transformation (EOG_WINDOW (user_data),
+						eog_transform_rotate_new (270));
+				zero_angle = rotate->angle;
+			}
+
+			break;
+		}
+
+		default:
+			break;
+		}
+	}
+}
+#endif
+
 static void
 eog_window_construct_ui (EogWindow *window)
 {
@@ -4593,6 +4645,15 @@
 					     _eog_zoom_shrink_to_boolean,
 					     NULL, NULL, NULL);
 	}
+#ifdef HAVE_LIBGRIP
+	grip_gesture_manager_register_window (grip_gesture_manager_get (),
+					      priv->view,
+					      GRIP_GESTURE_ROTATE,
+					      GRIP_DEVICE_ALL,
+					      2,
+					      _oif_window_gesture_event,
+					      window, NULL);
+#endif
 	g_settings_bind (priv->view_settings, EOG_CONF_VIEW_SCROLL_WHEEL_ZOOM,
 			 priv->view, "scrollwheel-zoom", G_SETTINGS_BIND_GET);
 	g_settings_bind (priv->view_settings, EOG_CONF_VIEW_ZOOM_MULTIPLIER,
